(in-package :jin.arxiv-rename)

(defparameter *arxiv-rename/tmp-file*
  "/tmp/arxiv-rename.xml")

(defun get-arxiv-metadata (identifier)
  ;; e.g. (get-arxiv-metadata "2208.04890")
  "E.g. identifier = \"2208.04890\"."
  (let* ((cmd `("wget" "-O"
                ,*arxiv-rename/tmp-file*
                ,(format nil
                         "http://export.arxiv.org/oai2?verb=GetRecord~a~a~a"
                         "&metadataPrefix=arXivRaw"
                         "&identifier=oai:arXiv.org:"
                         identifier)))
         (code (nth 2 (multiple-value-list
                       (uiop:run-program cmd :output t :error-output t)))))
    (if (= code 0)
        (xmls:parse (uiop:read-file-string *arxiv-rename/tmp-file*))
        (error "wget returns nonzero for identifier: ~a~%" identifier))))

(defun collect-xmls-nodes (node &optional result)
  ;; e.g. (collect-xmls-nodes (get-arxiv-metadata "2208.04890"))
  "A utility function to collect the sub-nodes of NODE recursively."
  (let ((result (or result (make-hash-table :test #'equal))))
    (when (eq (type-of node) 'xmls:node)
      (let ((name     (xmls:node-name node))
            (children (xmls:node-children node)))
        (if (gethash name result)
            (push node (gethash name result))
            (setf (gethash name result) `(,node)))
        (loop for child in children do
          (collect-xmls-nodes child result))
        result))))

;; Main function
(defun arxiv-rename-single (file-path)
  "Example: (arxiv-rename-single \"/Users/jin/2208.04890.pdf\")
renames that file to \"On the algebra generated by
$overline{mu},overline{partial}, partial, mu$-[Shamuel Auyeung,
Jin-Cheng Guu and Jiahao Hu]-[arXiv:2208.04890].pdf\""
  (let* ((identifier (pathname-name file-path))
         ;; TODO Check identifier is legit.
         (file-type  (pathname-type file-path))
         (xml-nodes  (collect-xmls-nodes
                      (get-arxiv-metadata identifier)))
         (id         (car (xmls:node-children
                           (car (gethash "id"      xml-nodes)))))
         (title      (car (xmls:node-children
                           (car (gethash "title"   xml-nodes)))))
         (title      (cl-ppcre::regex-replace-all "\\n" title " "))
         (authors    (car (xmls:node-children
                           (car (gethash "authors" xml-nodes)))))
         (new-name   (format nil "~a-\\[~a\\]-\\[arXiv:~a\\].~a" title authors id file-type)))
    (rename-file file-path new-name)))

;; TODO Hmm.. I feel like each file should has its own main
;; function, which takes free-args and options as their only
;; parameters. In that case, I may have to start breaking codes
;; into different systems and packages.
(defun arxiv-rename (free-args options)
  (declare (ignore options))
  (loop for file-path in (cdr free-args) do
    (arxiv-rename-single file-path)))

(setf (fdefinition 'main) #'arxiv-rename)
